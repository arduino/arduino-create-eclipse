trigger:
  batch: true
  branches:
    include:
    - master

pr:
- master

jobs:
- job: Build
  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-16.04'
      # mac:
      #   imageName: 'macos-10.13'
      # windows:
      #   imageName: 'vs2017-win2016'
    maxParallel: 3
  pool:
    vmImage: $(imageName)
  workspace:
    clean: all
  steps:
  - bash: ./mvnw clean verify -X
    displayName: Build
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: releng/cc.arduino.create.p2/target/repository/
      artifactName: repository
    condition: and(succeeded(), and(in(variables['Agent.OS'], 'Linux'), startsWith(variables['Release.Tag'], 'v')))
    displayName: Publish

- job: Release
  pool:
    vmImage: ubuntu-16.04
  workspace:
    clean: all
  dependsOn:
    - Build
  condition: and(succeeded(), startsWith(variables['Release.Tag'], 'v'))
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: Download
    inputs:
      artifactName: repository
      downloadPath: $(System.DefaultWorkingDirectory)
  - bash: cd repository && zip -r -D -9 arduino-eclipse-p2.zip *
  - task: GithubRelease@0
    inputs:
      gitHubConnection: typefox-service-account1
      repositoryName: TypeFox/arduino-eclipse
      assets: $(System.DefaultWorkingDirectory)/repository/*.zip
      target: $(Build.SourceVersion)
      action: Edit
      tagSource: auto
      tag: $(Release.Tag)
      assetUploadMode: delete
      addChangeLog: true
    displayName: Release
